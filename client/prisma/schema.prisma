generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(uuid())
  email              String?             @unique
  name               String?
  address            String?             @unique
  chats              Chat[]
  deployedContracts  DeployedContract[]
  generatedContracts GeneratedContract[]
  messages           Message[]
  transactions       Transaction[]
}

model Chat {
  id       String    @id @default(uuid())
  title    String?
  metadata Json?
  userId   String?
  type     ChatType  @default(GENERAL)
  User     User?     @relation(fields: [userId], references: [id])
  Message  Message[]
}

model Message {
  id        String   @id @default(uuid())
  metadata  Json?
  replyTo   String?
  chatId    String
  userId    String
  content   Json[]
  createdAt DateTime @default(now())
  Chat      Chat     @relation(fields: [chatId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id          String    @id @default(uuid())
  type        TxType
  status      TxStatus  @default(PENDING)
  metadata    Json?
  hash        String?
  userId      String
  createdAt   DateTime  @default(now())
  completedAt DateTime?
  User        User      @relation(fields: [userId], references: [id])
}

model GeneratedContract {
  id         String   @id @default(uuid())
  name       String
  sourceCode String
  userId     String
  createdAt  DateTime @default(now())
  User       User     @relation(fields: [userId], references: [id])
}

model DeployedContract {
  id              String   @id @default(uuid())
  name            String
  sourceCode      String
  userId          String
  contractAddress String
  classHash       String
  transactionHash String
  createdAt       DateTime @default(now())
  User            User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ASSISTANT
}

enum ChatType {
  GENERAL
  TRANSACTION
  ASK
}

enum TxType {
  SWAP
  TRANSFER
  BRIDGE
  DEPOSIT
  WITHDRAW
}

enum TxStatus {
  PENDING
  COMPLETED
  FAILED
}
