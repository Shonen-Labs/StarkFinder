generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}


model User {
  id       String    @id @default(uuid())
  email    String?   @unique
  name     String?
  address      String?       @unique
  chats    Chat[]
  messages Message[]
  transactions Transaction[]
}

model Chat {
  id       String    @id @default(uuid())
  messages Message[] // The relation to Message
  User     User?     @relation(fields: [userId], references: [id])
  userId   String?
}

model Message {
  id        String   @id @default(uuid())
  content   Json
  metadata  Json?
  userId    String
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  
  // Add the opposite relation for Message to Chat
  chat      Chat?    @relation(fields: [chatId], references: [id])
  chatId    String?
}



model Transaction {
  id          String   @id @default(uuid())
  type        TxType
  status      TxStatus @default(PENDING)
  metadata    Json?
  hash        String?
  userId      String
  createdAt   DateTime @default(now())
  completedAt DateTime?
  User        User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ASSISTANT
}

enum ChatType {
  GENERAL
  TRANSACTION
  ASK
}

enum TxType {
  SWAP
  TRANSFER
  BRIDGE
  DEPOSIT
  WITHDRAW
}

enum TxStatus {
  PENDING
  COMPLETED
  FAILED
}

